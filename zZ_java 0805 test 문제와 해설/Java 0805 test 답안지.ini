*****************************************************************************

문제1)Test 클래스 9~12에서
Student 객체 생성 시 
매개 변수 생성자가 작성되지 않아서
호출할 수 없는 문제 발생

조치1)
매개변수 생성자 만들기
/*
Student 클래스에서 7번째 줄
public Student() {} -->
public Student(String name, int score){
  this.name = name;
  this.score = score;
}
*/

*****************************************************************************

문제2)
for문의 조건식에서 list(컬렉션)의
크기를 구할 때 잘못된 메서드
length()를 호출함

조치2)
컬렉션에 저장된 객체의 개수를
반환하는 list.size() 호출
or
향상된 for문을 사용
/*
for(int i = 0; i < list.length(); i++){ -->
for(int i = 0; i < list.size(); i++){
or
for(String s : list){
  System.out.println(s);
}
*/

*****************************************************************************

문제3)
list 참조변수가 참조하는 객체가
생성되지 않아서
list.add() 수행 시
NullPointerException 발생

조치3)
list가 참조할 객체를 생성
list = new ArrayList<Student>();

*****************************************************************************

문제4)
for문 내 println() 구문에서
s 출력 시 
자동으로 toString()이 호출 되는데
Object.toString()을 호출해 
반환하고 있어서 주소 형태로 
출력되는 문제 발생


조치4)
Student.toString()을
요구사항에 맞는 형태로 변경
26번째 줄

return super.toString(); -->
return String.format("%s학생의 점수 :  %d점", name, score);

*****************************************************************************

모범답안

1) Test클래스 8번째 줄 : 
참조 변수 list에 null이 대입된 상태로 
아래 add()를 호출하였기 때문에 NullPointerException 발생

2) Test클래스 9~12번째 줄 : 
Student클래스에서 String, int를 받는 매개변수 생성자가 정의되지 않아 객체 생성 불가

3) Test클래스 14번째 줄 : 
ArrayList의 크기를 가져오기 위해 존재하지 않는 length() 사용

4) Student클래스 : 
Test클래스의 16번째 줄에서 참조 변수 s를 출력하고 있는데 
Student에 toString()가 부모의 toString()을 그대로 사용하고 있어 주소값 출력(제대로 오버라이딩 안됨)

**************************************************************************************

모범답안

1) Test클래스 8번째 줄 : 
참조 변수 list에 ArrayList객체 생성

ArrayList<Student> list = new ArrayList<Student>();

2) Test클래스 9~12번째 줄 : 
Student클래스에 String, int를 받는 매개변수 생성자 정의

(Student 클래스)

public Student(String name, int score){

this.name = name;

this.score = score;

}

3) Test클래스 14번째 줄 : 
ArrayList의 크기를 가져오기 위해 size() 사용

for(int i = 0; i < list.size(); i++){

4) Student클래스 : 
Test클래스의 16번째 줄에서 참조 변수 s를 출력해도 객체의 내용이 나오도록 toString() 오버라이딩

@Override

public String toString(){

return name + " 학생의 점수 : " + score + "점";

}